#!/usr/bin/env node

var clijs = require('../')
    copypaste = require('copy-paste').noConflict();

var cmd = {
  search: search,
  list: list,
  info: find,
  find: find,
  copy: copy,
}

try {
  cmd[process.argv[2]](process.argv[3]);
} catch(err) {
  clijs.commands.help()
}

  // case 'update':
  //   cache_packages(function(){
  //     console.log('');
  //     console.log('updated'.green);
  //     console.log('');
  //   });
  //   break;
  // case 'download':
  //   var cb = function(results){
  //     console.log('');
  //     console.log(results.name.green + ' installed'.green);
  //     console.log('');
  //   }

  //   if (process.argv[4]){
  //     download(process.argv[3], process.argv[4], cb);
  //   } else {
  //     download(process.argv[3], cb);
  //   }
  //   break;
//   default:
//     clijs.commands.help();
// }

// 
// implementation
// 

function search(query){
  clijs.commands.search(query, function(results){
    clijs.print.header('search results');
    if (results.length > 0){
      clijs.print.array(results);
    } else {
      console.log('no results found'.red);
    }
    console.log('');
  });
}

function list(){
  clijs.cache.read(function(pkg){
    clijs.print.header('all packages');
    clijs.print.array(pkg.map(function(a){ return a.name }));
    console.log('');
  });
}

function find(query){
  clijs.commands.find(query, function(result){
    if (result) {
      clijs.print.info(result);
    } else {
      console.log('');
      console.log('no results found'.red);
      console.log('maybe try a ' + 'search'.bold + '?')
      console.log('');
    }
  });
}

function copy(query){
  clijs.commands.get_url(query, function(result){
    copypaste.copy(result, function(){});
    console.log('');
    console.log(result.green);
    console.log('');
  });
}