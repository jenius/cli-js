#!/usr/bin/env node

var clijs = require('../');

switch (process.argv[2]) {
  case 'search':
    clijs.commands.search(process.argv[3], function(results){
      clijs.print.header('search results');
      if (results.length > 0){
        clijs.print.array(results);
      } else {
        console.log('no results found'.red);
      }
      console.log('');
    });
    break;
  // case 'list':
  //   read_packages(function(pkg){
  //     header('all packages');
  //     print_array(pkg.map(function(a){ return a.name }));
  //     console.log('');
  //   });
  //   break;
  // case 'info':
  //   find(process.argv[3], function(result){
  //     if (result) {
  //       print_info(result);
  //     } else {
  //       console.log('');
  //       console.log('no results found'.red);
  //       console.log('maybe try a ' + 'search'.bold + '?')
  //       console.log('');
  //     }
  //   });
  //   break;
  // case 'copy':
  //   get_url(process.argv[3], function(result){
  //     copy(result);
  //     console.log(result.green);
  //   });
  //   break;
  // case 'update':
  //   cache_packages(function(){
  //     console.log('');
  //     console.log('updated'.green);
  //     console.log('');
  //   });
  //   break;
  // case 'download':
  //   var cb = function(results){
  //     console.log('');
  //     console.log(results.name.green + ' installed'.green);
  //     console.log('');
  //   }

  //   if (process.argv[4]){
  //     download(process.argv[3], process.argv[4], cb);
  //   } else {
  //     download(process.argv[3], cb);
  //   }
  //   break;
  default:
    clijs.commands.help();
}